{"version":3,"file":"static/js/492.a824c4e9.chunk.js","mappings":"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","sources":["components/Pages/Pages.jsx","components/MainSection/MainSection.jsx","pages/Home/Home.jsx"],"sourcesContent":["import { Link, NavLink, useParams } from 'react-router-dom';\n\nexport const Pages = ({ totalPages }) => {\n  const params = useParams();\n  const current = Number(params.page) || 1;\n  const total = totalPages <= 500 ? totalPages : 500;\n\n  let pages = [];\n  let middlePage = 6;\n\n  if (current > total - 5) {\n    middlePage = total - 5;\n  }\n\n  if (current > 5 && current < total - 4) {\n    middlePage = current;\n  }\n\n  for (let i = middlePage - 4; i < middlePage + 5; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul>\n      {current !== 1 && (\n        <li>\n          <Link to={`page/${current - 1}`}>prev</Link>\n        </li>\n      )}\n      <li>\n        <NavLink to={`page/1`}>1</NavLink>\n      </li>\n      {current > 6 && <span>...</span>}\n      {pages\n        .filter(page => page !== 1 && page !== total)\n        .map(page => (\n          <li key={page}>\n            <NavLink to={`page/${page}`}>{page}</NavLink>\n          </li>\n        ))}\n      {current < total - 5 && <span>...</span>}\n      <li>\n        <NavLink to={`page/${total}`}>{total}</NavLink>\n      </li>\n      {current !== total && (\n        <li>\n          <Link to={`page/${current + 1}`}>next</Link>\n        </li>\n      )}\n    </ul>\n  );\n};\n","import { fetch } from 'API';\nimport { Pages } from 'components/Pages/Pages';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nexport const MainSection = ({ endpoint, title }) => {\n  const location = useLocation();\n  const params = useParams();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isShowDetails, setIsShowDetails] = useState(false);\n\n  console.log(data.results);\n\n  useEffect(() => {\n    const getItems = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`${endpoint}&page=${params.page || 1}`);\n        setData(response.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getItems();\n  }, [endpoint, params.page]);\n\n  return (\n    <section>\n      <h2>{title}</h2>\n      <ul>\n        {data.results &&\n          data.results.map(item => {\n            return (\n              <li key={item.id}>\n                <Link\n                  to={`/details/${\n                    item.media_type ? item.media_type : params.type\n                  }/${item.id}`}\n                  state={{ from: location }}\n                >\n                  <img\n                    src={\n                      item.poster_path &&\n                      `https://image.tmdb.org/t/p/w500${item.poster_path}`\n                    }\n                    alt={item.title || item.name}\n                    width={100}\n                  />\n                  {item.title || item.name}\n                  <div\n                    onMouseOver={() => setIsShowDetails(true)}\n                    onMouseOut={() => setIsShowDetails(false)}\n                  >\n                    Show details\n                  </div>\n                </Link>\n                {isShowDetails && (\n                  <div\n                    onMouseOver={() => setIsShowDetails(true)}\n                    onMouseOut={() => setIsShowDetails(false)}\n                  >\n                    <Link\n                      to={`/details/${\n                        item.media_type ? item.media_type : params.type\n                      }/${item.id}`}\n                      state={{ from: location }}\n                    >\n                      {item.title || item.name}\n                    </Link>\n                    <p>User score: {item.vote_average}</p>\n                    <h3>Overview</h3>\n                    <p>{item.overview}</p>\n                  </div>\n                )}\n              </li>\n            );\n          })}\n      </ul>\n      <Pages totalPages={data.total_pages} />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n    </section>\n  );\n};\n","import { MainSection } from 'components/MainSection/MainSection';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nconst Home = () => {\n  const params = useParams();\n  const [searchParams] = useSearchParams();\n\n  let endpoint = '/trending/all/day?language=en-US&page=1';\n  let title = 'Trending today';\n\n  if (params.type && !params.id) {\n    if (params.type === 'search') {\n      const query = searchParams.get('query');\n      endpoint = `/search/multi?language=en-US&query=${query}`;\n      title = `Search results for \"${query}\"`;\n    } else {\n      endpoint = `/trending/${params.type}/day?language=en-US`;\n      title = `Trending ${params.type === 'tv' ? 'TV shows' : 'movies'}`;\n    }\n  }\n\n  if (params.type && params.id) {\n    endpoint = `/discover/${params.type}?language=en-US&with_genres=${params.id}`;\n    title = `Trending ${params.name} ${\n      params.type === 'tv' ? 'TV shows' : 'movies'\n    }`;\n  }\n\n  return <MainSection endpoint={`${endpoint}`} title={title} />;\n};\n\nexport default Home;\n"],"names":["Pages","totalPages","params","useParams","current","Number","page","total","pages","middlePage","i","push","to","filter","map","MainSection","endpoint","title","location","useLocation","useState","data","setData","loading","setLoading","error","setError","isShowDetails","setIsShowDetails","console","log","results","useEffect","getItems","fetch","response","item","media_type","type","id","state","from","src","poster_path","alt","name","width","onMouseOver","onMouseOut","vote_average","overview","total_pages","useSearchParams","searchParams","query","get"],"sourceRoot":""}