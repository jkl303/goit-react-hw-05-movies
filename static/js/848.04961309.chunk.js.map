{"version":3,"file":"static/js/848.04961309.chunk.js","mappings":"8MAGAA,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAW,mCAAG,WAAMC,GAAN,uFACFF,EAAAA,EAAAA,IAAUE,EAAU,CACzCC,OAAQ,CACNC,QANU,sCAGW,cACnBC,EADmB,yBAMlBA,GANkB,2CAAH,qD,yJCHXC,E,OAAaC,GAAAA,KAAH,+b,SC0EvB,EAvEe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAW,GAFK,UAGalB,EAAAA,EAAAA,GAAY,uBAAD,OACfU,IAJT,QAGVa,EAHU,QAMGC,KAAKX,QAAQY,OAAS,GACvCX,EAAW,IACXY,MACE,6EAGFZ,EAAWS,EAAeC,KAAKX,SAZjB,gDAehBG,EAAS,2CAfO,yBAiBhBE,GAAW,GAjBK,4EAAH,qDAoBP,OAAVR,GAAkBY,GACnB,GAAE,CAACZ,IASJ,OACE,4BACE,UAACL,EAAD,CAAYsB,SATC,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAMF,EAAEG,OAAOC,SAASC,MAAMC,MAC5B,KAARJ,EAAaJ,MAAM,mBAAqBjB,EAAgB,CAAEC,MAAOoB,IACjEF,EAAEG,OAAOC,SAASC,MAAMC,MAAQ,EACjC,EAIG,WACE,kBACEC,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAAb,UACE,2CAGJ,wBACG1B,GACCG,EAAQ2B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM1B,GAAlC,SACGuB,KAFID,EAMZ,MAEJxB,IAAW,sCACXF,IAAS,uBAAIA,MAGnB,C","sources":["API.js","pages/Movies/SearchForm.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '95e0a9f6333c954132e51c9aa189b3ea';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchMovies = async endpoint => {\n  const response = await axios.get(endpoint, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  padding: 20px;\n  input {\n    border-radius: 4px;\n    :focus {\n      border: 2px solid #a11e1e;\n      outline: none;\n    }\n  }\n  button {\n    height: 24px;\n    margin-left: 20px;\n    color: #fff;\n    background-color: #a11e1e;\n    border-radius: 4px;\n    border: none;\n    :hover {\n      cursor: pointer;\n      color: #a11e1e;\n      background-color: #fff;\n      border: 2px solid #a11e1e;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'API';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchForm } from './SearchForm.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchMovie = async () => {\n      try {\n        setLoading(true);\n        const searchedMovies = await fetchMovies(\n          `/search/movie?query=${query}`\n        );\n        if (searchedMovies.data.results.length < 1) {\n          setResults([]);\n          alert(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        } else {\n          setResults(searchedMovies.data.results);\n        }\n      } catch {\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    query !== null && searchMovie();\n  }, [query]);\n\n  const onSearch = e => {\n    e.preventDefault();\n    const val = e.target.elements.input.value;\n    val === '' ? alert('Type something!') : setSearchParams({ query: val });\n    e.target.elements.input.value = '';\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSearch}>\n        <input\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </SearchForm>\n      <ul>\n        {query &&\n          results.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","fetchMovies","endpoint","params","api_key","response","SearchForm","styled","useSearchParams","searchParams","setSearchParams","query","get","useState","results","setResults","error","setError","loading","setLoading","location","useLocation","useEffect","searchMovie","searchedMovies","data","length","alert","onSubmit","e","preventDefault","val","target","elements","input","value","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","state","from"],"sourceRoot":""}