{"version":3,"file":"static/js/961.b9926b45.chunk.js","mappings":"8MAGAA,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAW,mCAAG,WAAMC,GAAN,uFACFF,EAAAA,EAAAA,IAAUE,EAAU,CACzCC,OAAQ,CACNC,QANU,sCAGW,cACnBC,EADmB,yBAMlBA,GANkB,2CAAH,qD,iHC4DxB,UA7DqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBN,GAAW,GAFS,UAGEb,EAAAA,EAAAA,GAAY,UAAD,OAAWK,IAHxB,OAGde,EAHc,OAIpBX,EAAgBW,EAAQC,MAJJ,gDAMpBV,EAAS,2CANW,yBAQpBE,GAAW,GARS,4EAAH,qDAWrBM,GACD,GAAE,CAACd,IAEJ,IAAQiB,EAAuDd,EAAvDc,YAAaC,EAA0Cf,EAA1Ce,MAAOC,EAAmChB,EAAnCgB,aAAcC,EAAqBjB,EAArBiB,SAAUC,EAAWlB,EAAXkB,OAEpD,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIb,EAAV,sBACA,4BACE,gBACEc,IAAKN,GAAW,yCAAsCA,GACtDO,IAAKN,EACLO,MAAO,OAET,wBAAKP,KACL,wCAAgBC,MAChB,sCACA,uBAAIC,KACJ,oCACA,uBACGC,GACCA,EACGK,KAAI,YACH,OADiB,EAAXC,IAEP,IACAC,KAAK,YAGd,mDACA,SAAC,KAAD,CAAMN,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,qBAECjB,IAAS,uBAAIA,IACbE,IAAW,uCACZ,SAAC,EAAAsB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["API.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '95e0a9f6333c954132e51c9aa189b3ea';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchMovies = async endpoint => {\n  const response = await axios.get(endpoint, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n","import { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovies } from 'API';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        setLoading(true);\n        const details = await fetchMovies(`/movie/${movieId}`);\n        setMovieDetails(details.data);\n      } catch {\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n  return (\n    <div>\n      <Link to={backLinkHref}>Go back</Link>\n      <div>\n        <img\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width={200}\n        />\n        <h2>{title}</h2>\n        <p>User score: {vote_average}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {genres &&\n            genres\n              .map(({ name }) => {\n                return name;\n              })\n              .join(', ')}\n        </p>\n      </div>\n      <p>Additional information</p>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n\n      {error && <p>{error}</p>}\n      {loading && <p>Loading...</p>}\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","fetchMovies","endpoint","params","api_key","response","movieId","useParams","useState","movieDetails","setMovieDetails","error","setError","loading","setLoading","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","details","data","poster_path","title","vote_average","overview","genres","to","src","alt","width","map","name","join","Suspense","fallback"],"sourceRoot":""}