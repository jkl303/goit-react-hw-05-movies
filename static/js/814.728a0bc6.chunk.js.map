{"version":3,"file":"static/js/814.728a0bc6.chunk.js","mappings":"iOA+EA,UA3EgB,WAAO,IAAD,IACpB,GAAqBA,EAAAA,EAAAA,MAAbC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,KAENC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfF,GAAW,GAFI,UAGQG,EAAAA,EAAAA,GAAM,IAAD,OAAKd,EAAL,YAAaD,IAH1B,gBAGPgB,EAHO,EAGPA,KACRR,EAAWQ,GAJI,gDAMfN,EAAS,EAAD,IANO,yBAQfE,GAAW,GARI,4EAAH,qDAWhBE,GACD,GAAE,CAACd,EAAIC,IAER,IAAQgB,EAAyDV,EAAzDU,YAAaC,EAA4CX,EAA5CW,QAASC,EAAmCZ,EAAnCY,aAAcC,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OAEtD,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIpB,EAAV,sBACA,4BACE,gBACEqB,IAAKN,GAAW,yCAAsCA,GACtDO,IAAKjB,EAAQkB,OAASlB,EAAQmB,KAC9BC,MAAO,OAET,wBAAKpB,EAAQkB,OAASlB,EAAQmB,QAC9B,wCAAgBP,KACfD,IAAW,gDAAiBA,EAAjB,QACXX,EAAQqB,SACP,4BACE,0CAAkBrB,EAAQsB,iBAC1B,+CAAgBtB,EAAQqB,QAAxB,eAGF,4BACE,4CAAoBrB,EAAQuB,mBAC5B,+CAAuBvB,EAAQwB,sBAC/B,gDAAwBxB,EAAQyB,uBAChC,uDAAwBzB,EAAQ0B,iBAAhC,eAGJ,sCACA,uBAAIb,KACJ,oCACA,uBACGC,GACCA,EACGa,KAAI,YACH,OADiB,EAAXR,IAEP,IACAS,KAAK,YAGd,mDACA,SAAC,KAAD,CAAMb,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,qBAECb,IAAS,uBAAIA,IACbE,IAAW,uCACZ,SAAC,EAAAyB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/Details/Details.jsx"],"sourcesContent":["import { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetch } from 'API';\n\nconst Details = () => {\n  const { id, type } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [details, setDetails] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetch(`/${type}/${id}`);\n        setDetails(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getDetails();\n  }, [id, type]);\n\n  const { poster_path, tagline, vote_average, overview, genres } = details;\n\n  return (\n    <div>\n      <Link to={backLinkHref}>Go back</Link>\n      <div>\n        <img\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={details.title || details.name}\n          width={200}\n        />\n        <h2>{details.title || details.name}</h2>\n        <p>User score: {vote_average}</p>\n        {tagline && <p>Tagline: {`\"${tagline}\"`}</p>}\n        {details.runtime ? (\n          <div>\n            <p>Release date: {details.release_date}</p>\n            <p>Runtime: {`${details.runtime} min`}</p>\n          </div>\n        ) : (\n          <div>\n            <p>First air date: {details.first_air_date}</p>\n            <p>Number of seasons: {details.number_of_seasons}</p>\n            <p>Number of episodes: {details.number_of_episodes}</p>\n            <p>Episode runtime: {`${details.episode_run_time} min`}</p>\n          </div>\n        )}\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {genres &&\n            genres\n              .map(({ name }) => {\n                return name;\n              })\n              .join(', ')}\n        </p>\n      </div>\n      <p>Additional information</p>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n\n      {error && <p>{error}</p>}\n      {loading && <p>Loading...</p>}\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Details;\n"],"names":["useParams","id","type","backLinkHref","useLocation","state","from","useState","details","setDetails","error","setError","loading","setLoading","useEffect","getDetails","fetch","data","poster_path","tagline","vote_average","overview","genres","to","src","alt","title","name","width","runtime","release_date","first_air_date","number_of_seasons","number_of_episodes","episode_run_time","map","join","Suspense","fallback"],"sourceRoot":""}